 matrizes e vetores em C, especialmente aplicados em jogos, vamos explorar os conceitos básicos, suas implementações e exemplos práticos. Matrizes e vetores são fundamentais na programação de jogos para manipular dados como posições de personagens, estados do jogo, mapas de níveis, entre outros.

Conceitos Básicos
Vetores
Um vetor é uma coleção de elementos do mesmo tipo armazenados em posições contíguas de memória. Em C, um vetor pode ser declarado assim:

int vetor[10];  // Vetor de 10 inteiros
Matrizes
Uma matriz é uma coleção de vetores, permitindo armazenamento em duas dimensões (ou mais). Em C, uma matriz bidimensional pode ser declarada assim:


int matriz[3][4];  // Matriz de 3 linhas e 4 colunas
Exemplos Aplicados em Jogos
Exemplo 1: Vetor para Armazenar Pontuações

#include <stdio.h>

int main() {
    int pontuacoes[5] = {100, 200, 300, 400, 500};  // Pontuações dos jogadores

    // Exibir pontuações
    for(int i = 0; i < 5; i++) {
        printf("Jogador %d: %d pontos\n", i+1, pontuacoes[i]);
    }

    return 0;
}
Exemplo 2: Matriz para Representar um Tabuleiro de Jogo

#include <stdio.h>

#define LINHAS 3
#define COLUNAS 3

int main() {
    char tabuleiro[LINHAS][COLUNAS] = {
        {'-', '-', '-'},
        {'-', '-', '-'},
        {'-', '-', '-'}
    };

    // Exibir tabuleiro
    for(int i = 0; i < LINHAS; i++) {
        for(int j = 0; j < COLUNAS; j++) {
            printf("%c ", tabuleiro[i][j]);
        }
        printf("\n");
    }

    return 0;
}
Exemplo 3: Vetores para Movimentação de Personagem

#include <stdio.h>

typedef struct {
    int x;
    int y;
} Posicao;

void mover(Posicao *pos, int dx, int dy) {
    pos->x += dx;
    pos->y += dy;
}

int main() {
    Posicao personagem = {0, 0};  // Posição inicial

    mover(&personagem, 1, 2);  // Mover personagem
    printf("Posição do personagem: (%d, %d)\n", personagem.x, personagem.y);

    return 0;
}
Exemplo 4: Matriz para Guardar Estados de Níveis do Jogo

#include <stdio.h>

#define NIVEIS 3
#define COLUNAS 3

int main() {
    int niveis[NIVEIS][COLUNAS] = {
        {1, 0, 0},
        {1, 1, 0},
        {1, 1, 1}
    };

    // Exibir estados dos níveis
    for(int i = 0; i < NIVEIS; i++) {
        printf("Nível %d: ", i+1);
        for(int j = 0; j < COLUNAS; j++) {
            printf("%d ", niveis[i][j]);
        }
        printf("\n");
    }

    return 0;
}
Exemplo 5: Vetores e Matrizes para Física de Jogos

#include <stdio.h>
#include <math.h>

typedef struct {
    float x;
    float y;
} Vetor2D;

Vetor2D somarVetores(Vetor2D v1, Vetor2D v2) {
    Vetor2D resultado = {v1.x + v2.x, v1.y + v2.y};
    return resultado;
}

int main() {
    Vetor2D velocidade = {1.0, 2.0};
    Vetor2D aceleracao = {0.5, 0.5};
    float tempo = 2.0;

    Vetor2D nova_velocidade = somarVetores(velocidade, (Vetor2D){aceleracao.x * tempo, aceleracao.y * tempo});
    printf("Nova velocidade: (%f, %f)\n", nova_velocidade.x, nova_velocidade.y);

    return 0;
}
